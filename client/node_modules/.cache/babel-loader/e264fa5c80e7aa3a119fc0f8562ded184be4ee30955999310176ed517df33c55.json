{"ast":null,"code":"var _jsxFileName = \"/home/tatiana-turin/projects/lab-creator/lab-creator/client/src/components/LabBuilder.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createQuestion, createMaterial } from \"../models/block\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport axios from \"axios\";\nimport LabPreview from \"./LabPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionEditor({\n  q,\n  onQuestionChange,\n  onQuestionDelete\n}) {\n  //onChange passed down from the parent so everything stays in sync\n  const update = (field, value) => {\n    //ONCHANGE CREATES A NEW QUESTION OBJECT WITH UQPDATED FIELD  VALUE\n    onQuestionChange({\n      ...q,\n      [field]: value\n    }); //field is the placeholder for any property\n    //properties of questionBlock blockType, type, prompt, desc\n  };\n\n  //DISPLAY PROMPT TEXT BOX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded mb-4 bg-white shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          type: \"text\",\n          placeholder: \"Prompt\",\n          className: \"w-full border p-2 mb-2\",\n          value: q.prompt,\n          rows: 3,\n          onChange: value => update(\"prompt\", value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), q.subQuestions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-64\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold mb-1\",\n          children: \"Answer Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"w-full border p-2 mb-2\",\n          placeholder: \"Admin Key\",\n          value: q.key || \"\",\n          onChange: e => update(\"key\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), q.subQuestions && q.subQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-4 border-l-2 pl-2\",\n      children: q.subQuestions.map((sq, i) => /*#__PURE__*/_jsxDEV(QuestionEditor, {\n        q: sq,\n        onQuestionChange:\n        //pass the updated Sub Q from child to parent in\n        //updatedSubQ\n        updatedSubQ => {\n          const updatedSubs = q.subQuestions.map((sub, idx) => idx === i ? updatedSubQ : sub);\n          // Call parent's onQuestionChange to update the parent question\n          onQuestionChange({\n            ...q,\n            subQuestions: updatedSubs\n          });\n        },\n        onQuestionDelete: () => {\n          //filter everything but the q to delete\n          const updatedSubs = q.subQuestions.filter((_, idx) => idx !== i);\n          onQuestionChange({\n            ...q,\n            subQuestions: updatedSubs\n          });\n        }\n      }, sq.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"border p-2\",\n      value: q.type,\n      onChange: e => update(\"type\", e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"short\",\n        children: \"Short Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"textarea\",\n        children: \"Paragraph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"code\",\n        children: \"Code Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _q$subQuestions;\n        const nextIndex = ((_q$subQuestions = q.subQuestions) === null || _q$subQuestions === void 0 ? void 0 : _q$subQuestions.length) || 0;\n        const nextLetter = String.fromCharCode(97 + nextIndex); //97=a\n        const newSubQ = createQuestion();\n        newSubQ.prompt = `${nextLetter}.`;\n        const updatedSubs = [...(q.subQuestions || []), newSubQ];\n        onQuestionChange({\n          ...q,\n          subQuestions: updatedSubs\n        }); //send to parent updated  q's and subQuestions\n      },\n      className: \"bg-green-600 text-white px-4 py-2 rounded\",\n      children: \"Add Sub Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onQuestionDelete,\n      className: \"bg-red-600 text-white px-2 py-1 rounded ml-2\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = QuestionEditor;\nfunction MaterialEditor({\n  block,\n  onMaterialChange,\n  onMaterialDelete\n}) {\n  _s();\n  const [image, setImage] = useState();\n  const update = (field, value) => {\n    //ONCHANGE CREATES A NEW BLOCK OBJECT WITH UPDATED FIELD AND TYPE VALUES \n    onMaterialChange({\n      ...block,\n      [field]: value\n    });\n    //text image block properties blockType, type, content\n  };\n  const addImage = base64 => {\n    onMaterialChange({\n      ...block,\n      images: [...(block.images || []), base64]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded mb-4 bg-white shadow\",\n    children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n      placeholder: \"Paste image or write here\",\n      rows: 8,\n      className: \"w-full border p-2 font-mono mb-2\",\n      value: block.content\n      // onChange handler doesn't receive a DOM event object, gives you content value directly\n      ,\n      onChange: value => update(\"content\", value),\n      onPaste: async e => {\n        //find item from clipboard that is an image\n        const item = Array.from(e.clipboardData.items).find(i => i.type.startsWith(\"image/\"));\n        if (item) {\n          const file = item.getAsFile(); //ge tthe image file\n          const reader = new FileReader();\n          reader.onload = ev => {\n            //executes once image file has been converted to base64 data URL\n            addImage(ev.target.result);\n            //update(\"content\",ev.target.result);\n          };\n          reader.readAsDataURL(file);\n          e.preventDefault();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), block.images && block.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2 flex flex-wrap gap-2\",\n      children: block.images.map((src, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: `Pasted ${idx}`,\n        style: {\n          maxWidth: \"100%\"\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 p-2 border bg-gray-50\",\n      dangerouslySetInnerHTML: {\n        __html: block.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onMaterialDelete,\n      className: \"bg-red-600 text-white px-2 py-1 rounded ml-2\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(MaterialEditor, \"rw6qng99rwBYv/BMRhLONeRFue4=\");\n_c2 = MaterialEditor;\nfunction LabBuilder() {\n  _s2();\n  const [blocks, setBlocks] = useState([]); //directions, questions, etc\n  const [title, setTitle] = useState(\"\");\n  const [responses, setResponses] = useState({});\n  const deleteBlock = id => {\n    setBlocks(blocks.filter(b => b.id !== id)); //remove block with id\n  };\n  const addMaterialBlock = () => {\n    //type can be text, or image?\n    setBlocks([...blocks, createMaterial()]);\n  };\n  const addQuestionBlock = () => {\n    setBlocks([...blocks, createQuestion()]);\n  };\n\n  //update block from child component \n  const updateBlock = (id, updated) => {\n    //replace old block with new block\n    setBlocks(blocks.map(b => b.id === id ? updated : b));\n  };\n  const moveBlock = (from, to) => {\n    if (to < 0 || to > blocks.length - 1) return;\n    const updatedBlocks = [...blocks];\n    //remove block is moving\n    const [moveBlock] = updatedBlocks.splice(from, 1);\n    //you could also do moveBlock= and then call moveBlock[0]\n    //move moveBlock to \"to\" index\n    updatedBlocks.splice(to, 0, moveBlock);\n    setBlocks(updatedBlocks);\n  };\n  const saveLab = () => {\n    const lab = {\n      title: title,\n      blocks\n    };\n    localStorage.setItem(\"labData\", JSON.stringify(lab));\n    console.log(\"Lab JSON:\", lab);\n    //alert(\"Lab saved! Check console for JSON.\");\n  };\n  const loadLab = () => {\n    const labData = localStorage.getItem(\"labData\");\n    if (labData) {\n      try {\n        const lab = JSON.parse(labData);\n        setTitle(lab.title || \"\");\n        setBlocks(lab.blocks || []);\n        console.log(\"lab loaded into blocks\");\n      } catch (e) {\n        alert(\"Failed to parse lab JSON!\");\n      }\n    } else {\n      alert(\"No saved lab found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      style: {\n        whiteSpace: \"pre-line\"\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      className: \"w-full border p-3 text-xl font-semibold mb-6\",\n      placeholder: \"Enter lab title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          e.preventDefault();\n          saveLab();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), blocks.map((block, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mr-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: i === 0,\n          onClick: () => moveBlock(i, i - 1),\n          className: \"bg-gray-300 text-black px-2 py-1 rounded mb-1\",\n          title: \"Move Up\",\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: i === blocks.length - 1,\n          onClick: () => moveBlock(i, i + 1),\n          className: \"bg-gray-300 text-black px-2 py-1 rounded\",\n          title: \"Move Down\",\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: block.blockType === \"material\" ? /*#__PURE__*/_jsxDEV(MaterialEditor, {\n          block: block,\n          onMaterialChange: updatedBlock => updateBlock(block.id, updatedBlock),\n          onMaterialDelete: () => deleteBlock(block.id)\n        }, block.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(QuestionEditor, {\n          q: block,\n          onQuestionChange: updatedBlock => updateBlock(block.id, updatedBlock),\n          onQuestionDelete: () => deleteBlock(block.id)\n        }, block.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, block.id || i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMaterialBlock,\n      className: \"bg-green-600 text-white px-4 py-2 rounded mr-2\",\n      children: \"Add Materials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestionBlock,\n      className: \"bg-green-600 text-white px-4 py-2 rounded mr-2\",\n      children: \"\\u2795 Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveLab,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n      children: \"\\uD83D\\uDCBE Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadLab,\n      className: \"bg-yellow-600 text-white px-4 py-2 rounded mr-2\",\n      children: \"\\uD83D\\uDCC2 Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const lab = {\n          title,\n          blocks\n        };\n        const blob = new Blob([JSON.stringify(lab, null, 2)], {\n          type: \"application/json\"\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = \"lab.json\";\n        a.click();\n        URL.revokeObjectURL(url);\n      },\n      className: \"bg-blue-600 text-white px-4 py-2 rounded ml-2\",\n      children: \"\\u2B07\\uFE0F Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LabPreview\n    //without the {} around props, react would treact as a string literal\n    , {\n      blocks: blocks,\n      title: title,\n      responses: responses,\n      setResponses: setResponses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n_s2(LabBuilder, \"jJY6B7zENoOTWVH2sk3qZYyMB8Q=\");\n_c3 = LabBuilder;\nexport default LabBuilder;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"QuestionEditor\");\n$RefreshReg$(_c2, \"MaterialEditor\");\n$RefreshReg$(_c3, \"LabBuilder\");","map":{"version":3,"names":["useState","createQuestion","createMaterial","ReactQuill","axios","LabPreview","jsxDEV","_jsxDEV","QuestionEditor","q","onQuestionChange","onQuestionDelete","update","field","value","className","children","type","placeholder","prompt","rows","onChange","fileName","_jsxFileName","lineNumber","columnNumber","subQuestions","length","key","e","target","map","sq","i","updatedSubQ","updatedSubs","sub","idx","filter","_","id","onClick","_q$subQuestions","nextIndex","nextLetter","String","fromCharCode","newSubQ","_c","MaterialEditor","block","onMaterialChange","onMaterialDelete","_s","image","setImage","addImage","base64","images","content","onPaste","item","Array","from","clipboardData","items","find","startsWith","file","getAsFile","reader","FileReader","onload","ev","result","readAsDataURL","preventDefault","src","alt","style","maxWidth","dangerouslySetInnerHTML","__html","_c2","LabBuilder","_s2","blocks","setBlocks","title","setTitle","responses","setResponses","deleteBlock","b","addMaterialBlock","addQuestionBlock","updateBlock","updated","moveBlock","to","updatedBlocks","splice","saveLab","lab","localStorage","setItem","JSON","stringify","console","log","loadLab","labData","getItem","parse","alert","whiteSpace","onKeyDown","disabled","blockType","updatedBlock","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","_c3","$RefreshReg$"],"sources":["/home/tatiana-turin/projects/lab-creator/lab-creator/client/src/components/LabBuilder.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {createQuestion, createMaterial} from \"../models/block\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport axios from \"axios\";\nimport LabPreview from \"./LabPreview\";\n\n\n\n\nfunction QuestionEditor({ q, onQuestionChange, onQuestionDelete}) {\n    //onChange passed down from the parent so everything stays in sync\n  const update = (field, value) => {\n    //ONCHANGE CREATES A NEW QUESTION OBJECT WITH UQPDATED FIELD  VALUE\n    onQuestionChange({ ...q, [field]: value }); //field is the placeholder for any property\n    //properties of questionBlock blockType, type, prompt, desc\n  };\n\n  //DISPLAY PROMPT TEXT BOX\n  return (\n    <div className=\"p-4 border rounded mb-4 bg-white shadow\">\n    <div className=\"flex items-start gap-4\">\n      <div className=\"flex-1\">\n        <ReactQuill\n          type=\"text\"\n          placeholder=\"Prompt\"\n          className=\"w-full border p-2 mb-2\"\n          value={q.prompt}\n          rows={3}\n          onChange={(value) => update(\"prompt\", value)}\n        />\n      </div>\n\n{/*DISPLAY KEY INPUT. If q has subquestions, don't render*/}\n    {q.subQuestions.length===0 && (\n        <div className=\"w-64\">\n            <label className=\"block font-semibold mb-1\">Answer Key</label>\n            <textarea\n            type=\"text\"\n            className=\"w-full border p-2 mb-2\"\n            placeholder=\"Admin Key\"\n            value={q.key || \"\"}\n            onChange={e => update(\"key\", e.target.value)}\n            />\n      </div>\n    )}\n     \n    </div>\n  \n    {/* DISPLAY SUB QUESTIONS */}\n        {q.subQuestions && q.subQuestions.length > 0 && (\n            <div className=\"ml-4 border-l-2 pl-2\">\n                {q.subQuestions.map((sq, i) => (\n                    <QuestionEditor\n                        key={sq.id}\n                        q={sq}\n                        onQuestionChange={\n                            //pass the updated Sub Q from child to parent in\n                            //updatedSubQ\n                            updatedSubQ=>{ \n                            const updatedSubs = q.subQuestions.map((sub,idx)=>\n                                idx === i ? updatedSubQ : sub\n                            );\n                             // Call parent's onQuestionChange to update the parent question\n                            onQuestionChange({...q, subQuestions:updatedSubs});\n                        }}\n                        onQuestionDelete={()=>{\n                            //filter everything but the q to delete\n                            const updatedSubs = q.subQuestions.filter((_,idx)=>idx!==i);\n                            onQuestionChange({...q,subQuestions:updatedSubs});\n                        }}                        \n                    />\n                ))}\n            </div>\n        )}\n\n      <select\n        className=\"border p-2\"\n        value={q.type}\n        onChange={(e) => update(\"type\", e.target.value)}\n      >\n        <option value=\"short\">Short Answer</option>\n        <option value=\"textarea\">Paragraph</option>\n        <option value=\"code\">Code Response</option>\n      </select>\n\n       <button\n            onClick={()=>{\n                const nextIndex = (q.subQuestions?.length || 0);\n                const nextLetter = String.fromCharCode(97+nextIndex); //97=a\n                const newSubQ = createQuestion();\n                newSubQ.prompt = `${nextLetter}.`;\n                const updatedSubs = [...(q.subQuestions || []),newSubQ];\n                onQuestionChange({...q,subQuestions: updatedSubs}); //send to parent updated  q's and subQuestions\n            }}\n            className=\"bg-green-600 text-white px-4 py-2 rounded\"\n        >\n            Add Sub Question\n        </button>\n        <button\n            onClick={onQuestionDelete}\n            className=\"bg-red-600 text-white px-2 py-1 rounded ml-2\"\n        >\n            Delete\n        </button>\n        \n    </div>\n  );\n}\n\nfunction MaterialEditor({block, onMaterialChange, onMaterialDelete}){\n    const [image, setImage] = useState();\n    const update = (field,value) =>{\n        //ONCHANGE CREATES A NEW BLOCK OBJECT WITH UPDATED FIELD AND TYPE VALUES \n        onMaterialChange({...block, [field]:value})\n        //text image block properties blockType, type, content\n    };\n\n    const addImage=(base64)=>{\n        onMaterialChange({\n            ...block,\n            images: [...(block.images||[]),base64]\n        })\n    };\n    return(\n        <div className=\"p-4 border rounded mb-4 bg-white shadow\">\n            <ReactQuill\n                placeholder=\"Paste image or write here\"\n                rows = {8}\n                className=\"w-full border p-2 font-mono mb-2\"\n                value={block.content}\n                // onChange handler doesn't receive a DOM event object, gives you content value directly\n                onChange={value=>update(\"content\",value)}\n               \n                onPaste={async (e)=>{\n                    //find item from clipboard that is an image\n                    const item = Array.from(e.clipboardData.items).find(i=>i.type.startsWith(\"image/\"));\n                    if(item){\n                        const file = item.getAsFile(); //ge tthe image file\n                        const reader = new FileReader();\n                        reader.onload =(ev)=>{ //executes once image file has been converted to base64 data URL\n                            addImage(ev.target.result);            \n                            //update(\"content\",ev.target.result);\n                        }\n                        reader.readAsDataURL(file);\n                        e.preventDefault();\n                    }\n                }}\n            />\n            {/* Render images above Markdown preview */}\n            {block.images && block.images.length > 0 && (\n                <div className=\"my-2 flex flex-wrap gap-2\">\n                    {block.images.map((src, idx) => (\n                        <img key={idx} src={src} alt={`Pasted ${idx}`} style={{maxWidth: \"100%\"}} />\n                    ))}\n                </div>\n            )}\n\n            <div className=\"mt-2 p-2 border bg-gray-50\"\n                 dangerouslySetInnerHTML={{ __html: block.content }} />\n            \n            \n       \n            <button\n            onClick={onMaterialDelete}\n            className=\"bg-red-600 text-white px-2 py-1 rounded ml-2\"\n            >\n                Delete\n            </button>\n        </div>\n    )\n}\n\nfunction LabBuilder(){\n    const [blocks, setBlocks] = useState([]); //directions, questions, etc\n    const [title, setTitle] = useState(\"\");\n    const [responses, setResponses] = useState({});\n\n    const deleteBlock = (id) =>{\n        setBlocks(blocks.filter(b=> b.id !== id)); //remove block with id\n    }\n\n    const addMaterialBlock = () => { //type can be text, or image?\n        setBlocks([\n            ...blocks, \n            createMaterial()\n        ]);\n    \n    }\n\n    const addQuestionBlock = () => {\n\n        setBlocks([\n        ...blocks,\n        createQuestion()\n        ]);\n    };\n\n    //update block from child component \n    const updateBlock = (id, updated) => {\n        //replace old block with new block\n        setBlocks(blocks.map((b) => (b.id === id ? updated : b)));\n    };\n\n    const moveBlock = (from, to)=>{\n        if(to<0 || to>blocks.length-1) return;\n        const updatedBlocks = [...blocks];\n        //remove block is moving\n        const [moveBlock] = updatedBlocks.splice(from,1);\n        //you could also do moveBlock= and then call moveBlock[0]\n        //move moveBlock to \"to\" index\n        updatedBlocks.splice(to,0,moveBlock);\n        setBlocks(updatedBlocks);\n    }\n\n    const saveLab = () => {\n        const lab = { title: title, blocks};\n        localStorage.setItem(\"labData\", JSON.stringify(lab));\n        console.log(\"Lab JSON:\", lab);\n        //alert(\"Lab saved! Check console for JSON.\");\n    };\n\n    const loadLab = ()=>{\n        const labData = localStorage.getItem(\"labData\");\n        if(labData){\n            try{\n                const lab = JSON.parse(labData);\n                setTitle(lab.title || \"\");\n                setBlocks(lab.blocks || []);\n                console.log(\"lab loaded into blocks\");\n            }catch(e){\n                alert(\"Failed to parse lab JSON!\");\n            }\n        }else{\n            alert(\"No saved lab found\");\n        }\n    }\n\n    return (\n        <div className=\"max-w-7xl mx-auto p-10\">\n        <h1 className=\"text-2xl font-bold mb-4\" style={{whiteSpace: \"pre-line\"}}>\n            {title}\n        </h1>\n        <textarea \n            type=\"text\"\n            className=\"w-full border p-3 text-xl font-semibold mb-6\"\n            placeholder=\"Enter lab title\"\n            value={title}\n            onChange={(e)=> setTitle(e.target.value)}\n            onKeyDown={(e)=>{\n                if(e.key=== \"Enter\"){\n                    e.preventDefault();\n                    saveLab();\n                }\n            }}\n        />\n\n    {/* DISPLAY BLOCKS */}\n        {blocks.map((block, i) => (\n            <div key={block.id || i} className=\"mb-6 flex items-start\">\n                {/* Arrow buttons on the left */}\n                <div className=\"flex flex-col mr-2\">\n                    <button\n                        disabled={i === 0}\n                        onClick={() => moveBlock(i, i - 1)}\n                        className=\"bg-gray-300 text-black px-2 py-1 rounded mb-1\"\n                        title=\"Move Up\"\n                    >\n                        ↑\n                    </button>\n                    <button\n                        disabled={i === blocks.length - 1}\n                        onClick={() => moveBlock(i, i + 1)}\n                        className=\"bg-gray-300 text-black px-2 py-1 rounded\"\n                        title=\"Move Down\"\n                    >\n                        ↓\n                    </button>\n                </div>\n         {/* Block editor */}\n                <div className=\"flex-1\">\n                    {block.blockType === \"material\" ? (\n                        <MaterialEditor\n                            key={block.id}\n                            block={block}\n                            onMaterialChange={(updatedBlock) => updateBlock(block.id, updatedBlock)}\n                            onMaterialDelete={() => deleteBlock(block.id)}\n                        />\n                    ) : (\n                        <QuestionEditor\n                            key={block.id}\n                            q={block}\n                            onQuestionChange={(updatedBlock) => updateBlock(block.id, updatedBlock)}\n                            onQuestionDelete={() => deleteBlock(block.id)}\n                        />\n                    )}\n                </div>\n            </div>\n        ))}\n    \n    {/* BUTTONS */}\n        <button \n            onClick={addMaterialBlock}\n            className=\"bg-green-600 text-white px-4 py-2 rounded mr-2\"\n        >\n            Add Materials\n        </button>\n        <button\n            onClick={addQuestionBlock}\n            className=\"bg-green-600 text-white px-4 py-2 rounded mr-2\"\n        >\n            ➕ Add Question\n        </button>\n        <button\n            onClick={saveLab}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n        >\n            💾 Save\n        </button>\n        <button\n            onClick={loadLab}\n            className=\"bg-yellow-600 text-white px-4 py-2 rounded mr-2\"\n        >\n            📂 Load\n        </button>\n        <button\n            onClick={() => {\n                const lab = { title, blocks };\n                const blob = new Blob([JSON.stringify(lab, null, 2)], { type: \"application/json\" });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = \"lab.json\";\n                a.click();\n                URL.revokeObjectURL(url);\n            }}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded ml-2\"\n        >\n            ⬇️ Export\n</button>\n\n        <LabPreview \n        //without the {} around props, react would treact as a string literal\n            blocks = {blocks}\n            title = {title}\n            responses = {responses}\n            setResponses = {setResponses}\n        />\n\n        </div>\n       \n    );\n}\n\nexport default  LabBuilder;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}